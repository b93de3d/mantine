(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[27582],{99781:(e,n,d)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/hooks/use-did-update",function(){return d(30919)}])},30919:(e,n,d)=>{"use strict";d.r(n),d.d(n,{default:()=>l});var s=d(31085),i=d(71184),t=d(85954),c=d(38215);let o=(0,t.P)(c.XZ.useDidUpdate);function a(e){let n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"use-did-update"})," hook works the same way as ",(0,s.jsx)(n.code,{children:"useEffect"})," but it is not called when component is mounted:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { useDidUpdate } from '@mantine/hooks';\n\nfunction Demo() {\n  useDidUpdate(\n    () => console.log(\"Won't be called when mounted\"),\n    [dependency1, dependency2]\n  );\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"function useDidUpdate(fn: EffectCallback, dependencies?: any[]): void;\n"})})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,s.jsx)(o,{...e,children:(0,s.jsx)(a,{...e})})}}},e=>{var n=n=>e(e.s=n);e.O(0,[67456,85954,90636,46593,38792],()=>n(99781)),_N_E=e.O()}]);