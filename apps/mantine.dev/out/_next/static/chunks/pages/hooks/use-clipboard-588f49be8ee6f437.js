(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[55381],{30433:(e,o,i)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/hooks/use-clipboard",function(){return i(55856)}])},55856:(e,o,i)=>{"use strict";i.r(o),i.d(o,{default:()=>p});var n=i(31085),r=i(71184),c=i(52022),t=i(43083);let d={type:"code",code:`
import { Button } from '@mantine/core';
import { useClipboard } from '@mantine/hooks';

function Demo() {
  const clipboard = useClipboard({ timeout: 500 });

  return (
    <Button
      color={clipboard.copied ? 'teal' : 'blue'}
      onClick={() => clipboard.copy('Hello, world!')}
    >
      {clipboard.copied ? 'Copied' : 'Copy'}
    </Button>
  );
}`,component:function(){let e=(0,t.i)({timeout:500});return(0,n.jsx)(c.$,{color:e.copied?"teal":"blue",onClick:()=>e.copy("Hello, world!"),children:e.copied?"Copied":"Copy"})},centered:!0};var l=i(85954),s=i(38215);let a=(0,l.P)(s.XZ.useClipboard);function h(e){let o={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components},{Demo:i}=o;return i||function(e,o){throw Error("Expected "+(o?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Demo",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsxs)(o.p,{children:[(0,n.jsx)(o.code,{children:"use-clipboard"})," hook provides interface to work with ",(0,n.jsx)(o.code,{children:"navigator.clipboard"}),":"]}),"\n",(0,n.jsx)(i,{data:d}),"\n",(0,n.jsx)(o.h2,{id:"navigatorclipboard-limitations",children:"navigator.clipboard limitations"}),"\n",(0,n.jsxs)(o.p,{children:["Due to security reasons ",(0,n.jsx)(o.code,{children:"use-clipboard"})," hook will not work in iframes and may not work with local files opened with ",(0,n.jsx)(o.code,{children:"file://"})," protocol\n(hook will work fine with local websites that are using ",(0,n.jsx)(o.code,{children:"http://"})," protocol). You can learn more about ",(0,n.jsx)(o.code,{children:"navigator.clipboard"})," ",(0,n.jsx)(o.a,{href:"https://web.dev/async-clipboard/",children:"here"}),"."]}),"\n",(0,n.jsx)(o.h2,{id:"api",children:"API"}),"\n",(0,n.jsxs)(o.p,{children:[(0,n.jsx)(o.code,{children:"use-clipboard"})," hook accepts one argument ",(0,n.jsx)(o.code,{children:"options"})," in which copied status timeout duration is defined (defaults to ",(0,n.jsx)(o.code,{children:"2000"}),").\nHook returns object with properties:"]}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"copy"})," – function to copy value to the clipboard"]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"copied"})," – value that indicates that ",(0,n.jsx)(o.code,{children:"copy"})," handler was called less than ",(0,n.jsx)(o.code,{children:"options.timeout"})," ms ago"]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"reset"})," – function to clear timeout and reset ",(0,n.jsx)(o.code,{children:"copied"})," to ",(0,n.jsx)(o.code,{children:"false"})]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"error"})," – contains ",(0,n.jsx)(o.code,{children:"Error"})," object if something goes wrong"]}),"\n"]}),"\n",(0,n.jsx)(o.h2,{id:"definition",children:"Definition"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-tsx",children:"function useClipboard(\n  options: { timeout: number } = { timeout: 2000 }\n): {\n  copy: (valueToCopy: any) => void;\n  reset: () => void;\n  error: Error;\n  copied: boolean;\n};\n"})})]})}function p(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,n.jsx)(a,{...e,children:(0,n.jsx)(h,{...e})})}}},e=>{var o=o=>e(e.s=o);e.O(0,[67456,85954,90636,46593,38792],()=>o(30433)),_N_E=e.O()}]);