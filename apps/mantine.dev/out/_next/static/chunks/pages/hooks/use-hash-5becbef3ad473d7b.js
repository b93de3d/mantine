(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[54541],{59195:(e,n,t)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/hooks/use-hash",function(){return t(34653)}])},34653:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>g});var s=t(31085),o=t(71184),i=t(56051),a=t(52022),h=t(93065),r=t(37905),c=t(14041),l=t(93739),d=t(63297);let u={type:"code",code:`
import { useHash, randomId } from '@mantine/hooks';
import { Button, Text, Code } from '@mantine/core';

function Demo() {
  const [hash, setHash] = useHash();
  return (
    <>
      <Button onClick={() => setHash(randomId())}>Set hash to random string</Button>
      <Text>Current hash: <Code>{hash}</Code></Text>
    </>
  );
}`,component:function(){let[e,n]=function({getInitialValueInEffect:e=!0}={}){let[n,t]=(0,c.useState)(e?"":window.location.hash||"");return(0,l.M)("hashchange",()=>{let e=window.location.hash;n!==e&&t(e)}),(0,c.useEffect)(()=>{e&&t(window.location.hash)},[]),[n,e=>{let n=e.startsWith("#")?e:`#${e}`;window.location.hash=n,t(n)}]}();return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.Y,{justify:"center",children:(0,s.jsx)(a.$,{onClick:()=>n((0,d.z)()),children:"Set hash to random string"})}),(0,s.jsxs)(h.E,{ta:"center",mt:"md",children:["Current hash: ",(0,s.jsx)(r.C,{children:e})]})]})}};var f=t(85954),m=t(38215);let p=(0,f.P)(m.XZ.useHash);function x(e){let n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components},{Demo:t}=n;return t||function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Demo",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"use-hash"})," returns hash from URL, subscribes to its changes with ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/hashchange_event",children:"hashchange event"}),"\nand allows changing it with ",(0,s.jsx)(n.code,{children:"setHash"})," function:"]}),"\n",(0,s.jsx)(t,{data:u}),"\n",(0,s.jsx)(n.h2,{id:"initial-state-value",children:"Initial state value"}),"\n",(0,s.jsxs)(n.p,{children:["By default, ",(0,s.jsx)(n.code,{children:"use-hash"})," will retrieve value in ",(0,s.jsx)(n.code,{children:"useEffect"}),". If you want to get initial value\nas soon as hook is called, set ",(0,s.jsx)(n.code,{children:"getInitialValueInEffect"})," to ",(0,s.jsx)(n.code,{children:"false"}),". Note that this option is\nnot compatible with server side rendering â€“ you can only use it if your app is client-side only."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { Button } from '@mantine/core';\nimport { useHash } from '@mantine/hooks';\n\nfunction Demo() {\n  const [hash, setHash] = useHash({ getInitialValueInEffect: false });\n  return (\n    <Button onClick={() => setHash('new-hash')}>Change hash</Button>\n  );\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"function useHash(options: {\n  getInitialValueInEffect?: boolean;\n}): readonly [string, (value: string) => void];\n"})})]})}function g(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,s.jsx)(p,{...e,children:(0,s.jsx)(x,{...e})})}}},e=>{var n=n=>e(e.s=n);e.O(0,[67456,85954,90636,46593,38792],()=>n(59195)),_N_E=e.O()}]);